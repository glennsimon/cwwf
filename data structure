Firebase:

users (coll):
	<uid> (doc):
		displayName: <display name> (field)
		friends: <Array of uid> (field)
		games: <Array of all started game ids>
		lastChanged: <timestamp>
		photoUrl: <photo url> (field)
		state: 'online' || 'offline' (field)
		privateData (coll):
			email: <email> (field)
			emailVerified: true || false (field)
			phoneNumber: <phone number> (field)
			providerData: <Array of Firebase.UserInfo> (field)
			providerId: <string identifying auth provider> (field)
	<uid> ...
games (coll):
	<auto-generated id for single game> (doc)
		initiator: <uid> (field)
		opponent: <uid> (field)
		start: <Date> (field)
		status: 'started' || 'finished' || 'rejected' || 'abandoned'
		puzzle: <puzzle object (includes player info)> (field)
		winner: null || <uid> (field)
		nextTurn: <uid> (field)
	<auto-generated id for single game> ...


Puzzle object:

{
	author: "Alfio Micci",
	clues: {
		across: [
			<across clue with clue number (ex: "1. Attention getter")>,
			...
			<across clue with clue number>
		],
		down: [
			<down clue with clue number (ex: "1. Citizen")>,
			...
			<down clue with clue number>
		],
	},
	rows: <number of rows>,
	cols: <number of columns>,
	copyright: <copyright string>,
	date: <date published string, format m/d/yyyy>,
	dow: <day of week (ex: Thursday)>,
	editor: <name of editor string>,
	grid: [
		{
			black: true || false, 
			value: <single capital letter A-Z> || <'.' (black cell)>, 
			clueNum: <clue number as number> || <empty string>, 
			status: 'free' || 'blocked', 
			circle: null || true
		},
		... (one object for each grid cell in the entire puzzle)
	],
	notepad: null || <notepad text describing puzzle',
	title: <puzzle title (ex: "NY TIMES, THU, JAN 01, 1976")>,

	// above is generic puzzle info, below is game-play data
	initiator: {
		uid: <uid>,
		color: <color string>,
		score: <number>,
		squaresWon: [
			<number of index>,
			...
		],
		errors: <number>
	},
	opponent: {
		uid: <uid>,
		color: <color string>,
		score: <number>,
		squaresWon: [
			<number of index>,
			...
		],
		errors: <number>
	},
	graySquares: [
		<number of square index that is colored gray>
	]
	active: true || false
}